#! /bin/bash

# Installation ISO image builder:
#
# 1. Mount standard Debian installation ISO as master, copy contents
#    to image build area.
#
# 2. Set a non-zero installation menu timeout so that installation
#    may begin automatically.
#
# 3. Use m4 macro processor to patch standard preseed.cfg according
#    to build variables, write patched version to image build area.
#    Patching includes generating a login password for root and
#    for non-root user "me".
#
# 4. Copy "find_disk" and "finalize" scripts to build area.
#
# 5. Unpack, patch, and repack initrd.gz files to include
#    files preseed.cfg, find_disk and finalize.
#
# 6. Remove copies of preseed.cfg, find_disk and finalize from
#    build area (they're now embedded in initrd.gz files) and
#    update catalog of file checksums.
#
# 7. Create ISO image from contents of image build area.

MOUNT="/mnt/iso"
WORK="/var/tmp/debiso"
PASSWORD_LEN="12"

ISO=$1

if [ "$ISO" = "" ]; then
	echo "please provide master ISO path"
	exit
fi

if [ ! "`whoami`" = "root" ]; then
	echo "run as root"
	exit
fi

if [ ! -d $MOUNT ]; then
	mkdir $MOUNT
fi

##### mount ISO image, copy to work area

echo "mount master ISO, copy to work area"

mount -o loop,ro $ISO $MOUNT
rm -rf $WORK
mkdir -p $WORK
rsync -a $MOUNT/ $WORK
umount $MOUNT

##### set non-zero boot timeout to autostart install

echo "patch initrd image and add scripts: preseed.cfg, finalize, find_disk"

sed -i -e 's/timeout 0$/timeout 50/' $WORK/isolinux/isolinux.cfg

##### edit initrd

#	patch preseed.cfg

PASSWORD=`date +%s|sha256sum|base64|head -c $PASSWORD_LEN`
echo "generated login password (record this somewhere): $PASSWORD"

m4 -DPASSWORD=$PASSWORD \
	preseed.cfg > $WORK/preseed.cfg

cp finalize $WORK/finalize
cp find_disk $WORK/find_disk

HERE=$PWD
cd $WORK

#	edit command initrd

echo "rewrap command install initrd"
INITRD="install.amd/initrd"
gunzip $INITRD.gz
echo preseed.cfg | cpio --quiet -H newc -o -A -F $INITRD
echo finalize | cpio --quiet -H newc -o -A -F $INITRD
echo find_disk | cpio --quiet -H newc -o -A -F $INITRD
gzip $INITRD

#	edit graphic initrd

echo "rewrap GUI install initrd"
INITRD="install.amd/gtk/initrd"
gunzip $INITRD.gz
echo preseed.cfg | cpio --quiet -H newc -o -A -F $INITRD
echo finalize | cpio --quiet -H newc -o -A -F $INITRD
echo find_disk | cpio --quiet -H newc -o -A -F $INITRD
gzip $INITRD

##### update checksum

echo "update checksums"
rm preseed.cfg
rm finalize
rm find_disk
md5sum `find 2>/dev/null -follow -type f` > md5sum.txt

##### remaster ISO image

cd $HERE
BASE=`basename $ISO`
PRESEED="preseed-${BASE}"
echo "remaster ISO image: $PRESEED"
genisoimage -quiet -r -J -b isolinux/isolinux.bin -c isolinux/boot.cat \
	-no-emul-boot -boot-load-size 4 -boot-info-table \
	-o ${PRESEED} $WORK
# make bootable
isohybrid $PRESEED
echo "done"
